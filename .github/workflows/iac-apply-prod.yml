name: Apply Infrastructure - PROD

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  apply-prod-infra:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Applying IaC on PROD
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.7
          terraform_wrapper: false

      - name: Terraform Format - PROD Environment
        id: fmt
        working-directory: ./infra/
        run: terraform fmt -recursive -check -diff
        continue-on-error: false

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

      - name: Configure AWS credentials for PROD
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::740172916922:role/github-actions-terraform-role-dev
          aws-region: us-east-1

      - name: Initialize project
        working-directory: ./infra/
        run: terraform init -backend-config=env/prod/backend.hcl  -var-file=env/prod/prod.tfvars -reconfigure

      - name: Terraform Plan - PROD
        working-directory: ./infra/
        run: terraform plan -var-file=env/prod/prod.tfvars -var="slack_token=${{ secrets.PROD_SLACK_TOKEN }}" -var="slack_signing_secret=${{ secrets.PROD_SLACK_SIGNING_SECRET }}" -var="slack_channel=${{ secrets.PROD_SLACK_CHANNEL }}" -var="org_webhook_secret=${{ secrets.ORG_WEBHOOK_SECRET }}" -var="org_private_key=${{ secrets.ORG_PRIVATE_KEY }}" -var="org_app_id=${{ secrets.ORG_APP_ID }}" -out=tfplan

      - name: Apply Infra - PROD
        working-directory: ./infra/
        id: apply_infra
        run: terraform apply -auto-approve tfplan
